{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/UI/Input/Input.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","assest/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Modal/Modal.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/actionTypes.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","App.js","serviceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","index.js"],"names":["module","exports","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","SideDrawer","Open","Close","Logo","Input","Label","InputElement","Invalid","BuildControl","Less","More","Toolbar","DesktopOnly","NavigationItem","active","BuildControls","OrderButton","enable","Button","Success","Danger","Content","__webpack_require__","p","NavigationItems","DrawerToggle","Backdrop","Burger","Modal","Loader","load4","CheckoutSummary","ContactData","Order","logo","props","react_default","a","createElement","className","classes","src","burgerLogo","alt","navigationItem","react_router_dom","to","link","exact","activeClassName","children","navigationItems","drawerToggle","onClick","toggleDrawer","toolbar","clicked","backdrop","show","cancelled","sideDrawer","attachedClasses","open","Fragment","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","_this","setState","drawerToggleHandler","prevState","this","Component","BurgerIngredient","ingredient","type","prototypes","PropTypes","string","isRequired","burger","transformedIngredients","Object","keys","ingredients","map","igKey","toConsumableArray","Array","_","i","Burger_BurgerIngredient_BurgerIngredient","key","reduce","accumulator","currentIngredient","concat","length","buildControl","ingredientLabel","removed","disabled","added","controls","label","buildControls","price","toFixed","control","addIngredient","removeIngredient","purchasable","ordered","button","btnType","orderSummary","capitalize","textTransform","order","style","orderCancelled","orderContinued","nextProps","nextState","console","log","cancel","transform","opacity","axiosInstance","axios","create","baseURL","spinner","withErrorHandler","WrappedComponent","_Component","_temp","_getPrototypeOf2","classCallCheck","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","error","errorConfirmedHandler","inherits","createClass","value","_this2","reqInterceptors","interceptors","request","use","req","resInterceptors","response","res","eject","UI_Modal_Modal","message","BurgerBuilder","orderHandler","orderCancelledHandler","orderContineHandler","onInitPurchase","history","push","onInitIngredients","sum","element","disabledInfo","objectSpread","ings","textAlign","Spinner","onIngredientAdded","onIngredientRemoved","updatePurchaseState","OrderSummary","connect","burgerBuilder","totalPrice","dispatch","ingName","ingredientName","get","then","data","catch","checkoutSummary","role","aria-label","width","margin","checkoutCancelled","checkoutContinued","inputElement","inputClasses","invalid","shouldValidate","touched","elementType","assign","elementConfig","onChange","changed","options","option","displayValue","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","isNumeric","country","email","isEmail","deliveryMethod","formIsValid","event","preventDefault","formData","formElementIdentifier","orderData","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","test","formElementsArray","id","config","form","onSubmit","formElement","UI_Input_Input","loading","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","actions","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","react_router","purchasedRedirect","purchased","path","match","component","ingredientsName","amount","ingredientsOutput","ig","display","padding","border","Orders","onFetchOrders","orders","components_Order_Order","fetchedOrders","err","Auth","password","App","hoc_Layout_Layout","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","INGREDIENTS_PRICE","meat","bacon","salad","cheese","reducer","undefined","action","updatedIngredient","defineProperty","updatedState","updatedIng","updatedSta","setIngredients","fetchIngredientsFailed","purchaseInit","purchaseBurgerStart","newOrder","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","store","createStore","applyMiddleware","thunk","app","es","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3ead0834.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2Ztn6\",\"BreadTop\":\"BurgerIngredient_BreadTop__16isd\",\"Seeds1\":\"BurgerIngredient_Seeds1__2PVYz\",\"Seeds2\":\"BurgerIngredient_Seeds2__1sVlT\",\"Meat\":\"BurgerIngredient_Meat__2uiWa\",\"Cheese\":\"BurgerIngredient_Cheese__30yi1\",\"Salad\":\"BurgerIngredient_Salad__1PrrG\",\"Bacon\":\"BurgerIngredient_Bacon__3Tje9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3tjcs\",\"Open\":\"SideDrawer_Open__16Bkb\",\"Close\":\"SideDrawer_Close__1Yvhx\",\"Logo\":\"SideDrawer_Logo__1LyLl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__16aEI\",\"Label\":\"Input_Label__1RzOZ\",\"InputElement\":\"Input_InputElement__32oeY\",\"Invalid\":\"Input_Invalid__M5Zka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__3Stjl\",\"Label\":\"BuildControl_Label__1ml_T\",\"Less\":\"BuildControl_Less__8w3oY\",\"More\":\"BuildControl_More__2fQ_G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__1LUSz\",\"Logo\":\"Toolbar_Logo__3h_p-\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1lRXK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1nVKb\",\"active\":\"NavigationItem_active__eB_w9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__cQAq2\",\"OrderButton\":\"BuildControls_OrderButton__2Tyyx\",\"enable\":\"BuildControls_enable__2qguG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1lz8z\",\"Success\":\"Button_Success__38Mlh\",\"Danger\":\"Button_Danger__rJCjU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2S3m4\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2zbov\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__3VGV5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__l6ytG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__kg2XX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__1dXZk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__pJcBP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1oApf\",\"load4\":\"Spinner_load4__3W9gw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3yVHt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__13X9t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3Szn0\"};","import React from 'react';\r\n\r\nimport burgerLogo from '../../assest/images/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo}>\r\n        <img src={burgerLogo} alt=\"Burger\" />\r\n    </div>\r\n)\r\n\r\nexport default logo;","import React from 'react';\r\nimport classes from './NavigationItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink\r\n            to={props.link}\r\n            exact={props.exact}\r\n            activeClassName={classes.active}>{props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = (props) => {\r\n    return (\r\n        <ul className={classes.NavigationItems}>\r\n            <NavigationItem exact link='/'>Burger Builder</NavigationItem>\r\n            <NavigationItem link='/orders'>Orders</NavigationItem>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) =>(\r\n    <div className={classes.DrawerToggle} onClick={props.toggleDrawer}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => {\r\n    return (\r\n        <header className={classes.Toolbar}>\r\n            <DrawerToggle toggleDrawer={props.clicked}/>\r\n            <div className={classes.Logo}>\r\n                <Logo/>\r\n            </div>\r\n            \r\n            <nav className={classes.DesktopOnly}>\r\n                <NavigationItems />\r\n               \r\n            </nav>\r\n        </header>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => {\r\n    return props.show ? <div className={classes.Backdrop} onClick={props.cancelled}></div> : null;\r\n}\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\nconst sideDrawer = (props) =>{\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    \r\n    if (props.open){\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Backdrop show={props.open} cancelled={props.closed}/>\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo/>\r\n                </div>\r\n                \r\n                <nav>\r\n                    <NavigationItems/>\r\n                </nav>\r\n                \r\n            </div>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\n\r\nclass Layout extends Component{\r\n\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () =>{\r\n        this.setState({showSideDrawer: false})\r\n    }\r\n\r\n    drawerToggleHandler = (prevState) =>{\r\n        return  this.setState({showSideDrawer: !prevState.showSideDrawer})\r\n       \r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        return (\r\n            <>\r\n                <Toolbar clicked={this.drawerToggleHandler}/>\r\n                <SideDrawer open={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler}/>\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Layout;","import React,{ Component } from 'react';\r\nimport classes from './BurgerIngredient.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n class BurgerIngredient extends Component{\r\n\r\n    render(){\r\n        let ingredient = null;\r\n\r\n        switch(this.props.type){\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom} ></div>;\r\n                break;\r\n            \r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className = {classes.Seeds1}></div>\r\n                        <div className = {classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n\r\n            case ('salad'):\r\n            ingredient = <div className={classes.Salad}></div>;\r\n            break;\r\n\r\n            case ('cheese'):\r\n            ingredient = <div className={classes.Cheese}></div>;\r\n            break;\r\n            \r\n            case ('meat'):\r\n                ingredient = <div className={classes.Meat}></div>;\r\n                break;        \r\n    \r\n            case ('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>;\r\n                break;       \r\n    \r\n            default:\r\n                ingredient = null;\r\n        }    \r\n        return ingredient;\r\n    };    \r\n };\r\n\r\n BurgerIngredient.prototypes = {\r\n     type: PropTypes.string.isRequired\r\n }\r\n   \r\nexport default BurgerIngredient;\r\n","import React from 'react';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\nimport classes from './Burger.module.css'\r\n\r\nconst burger = (props) => {\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n    .map( igKey =>{ \r\n        return [...Array(props.ingredients[igKey])]\r\n        .map( (_, i) => {                    \r\n                return <BurgerIngredient key={igKey + i} type={igKey}  />})\r\n            })\r\n            .reduce((accumulator, currentIngredient) => {\r\n                return accumulator.concat(currentIngredient)}, []);\r\n\r\n    if (transformedIngredients.length === 0){\r\n        transformedIngredients = <p>Please Start Adding Ingredients</p>\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n           {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.ingredientLabel}</div>\r\n        <button className={classes.Less} onClick={props.removed} disabled={props.disabled}>Less</button>\r\n        <button className={classes.More} onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\n\r\nconst controls = [\r\n    {label: 'Salad', type:'salad'},\r\n    {label: 'Cheese', type:'cheese'},\r\n    {label: 'Bacon', type:'bacon'}, \r\n    {label: 'Meat', type:'meat'}\r\n    \r\n];\r\n\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\r\n       {controls.map((control) => \r\n         <BuildControl \r\n            key={control.label}\r\n            ingredientLabel={control.label}\r\n            added={() => props.addIngredient(control.type)}\r\n            removed={() => props.removeIngredient(control.type)}\r\n            disabled={props.disabled[control.type]}\r\n             /> )}\r\n\r\n        <button className={classes.OrderButton} disabled={!props.purchasable} onClick={props.ordered}>ORDER NOW!</button>        \r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\n\r\nconst button = (props) => {\r\n    return (\r\n        <button \r\n            disabled={props.disabled}\r\n            className={[classes.Button, classes[props.btnType]].join(' ')}\r\n            onClick={props.clicked}>\r\n                {props.children}\r\n            </button>\r\n    );\r\n}\r\n\r\nexport default button;","import React from 'react';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst orderSummary = (props) => {\r\n\r\n    const capitalize = {\r\n        textTransform: \"capitalize\"\r\n    }\r\n\r\n    const order = Object.keys(props.ingredients)\r\n        .map( igKey => {\r\n            return <li key={igKey} ><span style={capitalize}>{igKey}: {props.ingredients[igKey]}</span></li>});\r\n\r\n    \r\n    return(\r\n        <>\r\n            <h3>Your Order</h3>\r\n            <p>The ingredients in your delicious burger:</p>\r\n            <ul>\r\n                {order}\r\n            </ul>\r\n            <p><strong>Total Price: $ {props.price.toFixed(2)}</strong></p>\r\n            <p>Continue to Checkout?</p>\r\n            <Button btnType=\"Danger\" clicked={props.orderCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked={props.orderContinued}>CONTINUE</Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default orderSummary;","import React, { Component } from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component{\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    componentWillUpdate(){\r\n        console.log('[Modal] WillUpdate');\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <>\r\n            <Backdrop show={this.props.show} cancelled={this.props.cancel}/>\r\n            <div \r\n                className={classes.Modal}\r\n                style={{\r\n                    transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                    opacity: this.props.show ? 1 : 0  }}>\r\n                \r\n                {this.props.children}\r\n\r\n            </div>\r\n        </>\r\n        );\r\n    }\r\n} \r\n\r\nexport default Modal;","import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://react-burger-builder-3de3e.firebaseio.com/'\r\n})\r\n\r\nexport default axiosInstance;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => {\r\n    return (\r\n        <div className={classes.Loader}>Loading...</div>\r\n    )\r\n}\r\n\r\nexport default spinner;","import React, { Component } from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) =>{\r\n    return class extends Component{\r\n\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        componentWillMount(){\r\n\r\n            this.reqInterceptors = axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n                return req;\r\n\r\n            });\r\n            this.resInterceptors = axios.interceptors.response.use(res => res, error =>{ \r\n                this.setState({error: error})\r\n                //console.log(error);\r\n            });\r\n        }\r\n\r\n\r\n        componentWillUnmount(){\r\n\r\n            axios.interceptors.request.eject(this.reqInterceptors);\r\n            axios.interceptors.response.eject(this.resInterceptors);\r\n        }\r\n\r\n        errorConfirmedHandler = () =>{\r\n            this.setState({error: null})\r\n        }\r\n\r\n        render(){\r\n            return(\r\n                <>\r\n                <Modal \r\n                    show={this.state.error}\r\n                    cancel={this.errorConfirmedHandler}>\r\n                    {this.state.error ? this.state.error.message :null}\r\n\r\n                </Modal>\r\n                <WrappedComponent {...this.props}/>\r\n            </>\r\n            );\r\n        }\r\n    }   \r\n}\r\n\r\nexport default withErrorHandler;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\n\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    state = {\r\n        ordered: false,\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n        this.props.onInitIngredients();\r\n        \r\n    }\r\n\r\n    orderHandler = () => {\r\n        this.setState({ ordered: true })\r\n    }\r\n\r\n    updatePurchaseState(ingredients) {\r\n\r\n        const sum = Object.keys(ingredients)\r\n            .map(\r\n                (igKey) => {\r\n                    return ingredients[igKey]\r\n                })\r\n            .reduce((sum, element) => {\r\n                return sum + element;\r\n            }, 0);\r\n\r\n        //console.log(sum);\r\n\r\n        return sum > 0 ;\r\n    }\r\n\r\n    orderCancelledHandler = () => {\r\n        this.setState({ ordered: false })\r\n    }\r\n\r\n    orderContineHandler = () => {\r\n        this.props.onInitPurchase();\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        }; \r\n\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        }\r\n        let orderSummary = null;\r\n\r\n        let burger = this.props.error ? <p style={{ textAlign: \"center\" }}>Ingredients can't be fetched from server</p> : <Spinner />\r\n\r\n        if (this.props.ings) {\r\n            burger =\r\n                <>\r\n                    <Burger ingredients={this.props.ings} />\r\n                    <BuildControls\r\n                        addIngredient={this.props.onIngredientAdded}\r\n                        removeIngredient={this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo}\r\n                        price={this.props.price}\r\n                        purchasable={this.updatePurchaseState(this.props.ings)}\r\n                        ordered={this.orderHandler} />\r\n                </>\r\n            orderSummary = <OrderSummary\r\n                ingredients={this.props.ings}\r\n                price={this.props.price}\r\n                orderContinued={this.orderContineHandler}\r\n                orderCancelled={this.orderCancelledHandler} />\r\n\r\n            \r\n        }\r\n\r\n        return (\r\n            <>\r\n                {burger}\r\n\r\n                <Modal show={this.state.ordered} cancel={this.orderCancelledHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error  \r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit())\r\n    }\r\n} \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)( withErrorHandler(BurgerBuilder, axios));","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const addIngredient = ( name ) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT, \r\n        ingredientName: name\r\n    }\r\n}\r\n\r\nexport const removeIngredient = ( name ) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT, \r\n        ingredientName: name\r\n    }\r\n}\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    }\r\n}\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    }\r\n}\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('https://react-burger-builder-3de3e.firebaseio.com/ingredients.json')\r\n            .then(response => {\r\n                //console.log(response);\r\n                dispatch(setIngredients(response.data));\r\n                \r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchIngredientsFailed());  \r\n            });\r\n    }\r\n}","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START'; \r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL= 'FETCH_ORDERS_FAIL';","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSuccess = ( id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id, \r\n        orderData: orderData\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\nexport const purchaseBurger  = (orderData) => {\r\n    \r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post( '/orders.json', orderData )\r\n        .then( response => {\r\n            console.log(response.data)\r\n            dispatch(purchaseBurgerSuccess(response.data.name, orderData ))\r\n        } )\r\n        .catch( error => {\r\n            dispatch(purchaseBurgerFail(error))\r\n        } );\r\n    }\r\n}\r\n\r\n   \r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    }\r\n}\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n}\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    }\r\n}\r\n\r\nexport const fetchOrders = (orders) => {\r\n    return dispatch => {\r\n        \r\n        dispatch(fetchOrdersStart());\r\n        axios.get('/orders.json')\r\n        .then(res => {\r\n            const fetchedOrders = [];\r\n            for (let key in res.data) {\r\n                fetchedOrders.push({\r\n                    ...res.data[key],\r\n                    id: key\r\n                })\r\n\r\n            }\r\n            dispatch(fetchOrdersSuccess(fetchedOrders))\r\n        })\r\n        .catch(err => {\r\n            dispatch(fetchOrdersFail(err))\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>It seems delicious!!!<span role=\"img\" aria-label=\"Hungry\">😋</span> </h1>\r\n            <div style={{width: \"100%\",  margin:'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button \r\n                btnType=\"Danger\" \r\n                clicked={props.checkoutCancelled}>\r\n                CANCEL</Button>\r\n\r\n            <Button \r\n                btnType=\"Success\"\r\n                clicked={props.checkoutContinued}\r\n            >CONTINUE</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\n\r\nconst Input = (props) => {\r\n\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n    // console.log(inputClasses.join(' '));\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched){\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n\r\n\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea\r\n                className={inputClasses}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />\r\n            break;\r\n        case ('select'):\r\n            inputElement = (\r\n                <select\r\n                    className={inputClasses}\r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option className={classes.InputElement} key={option.value} value={option.value}>{option.displayValue}</option>\r\n                    ))}\r\n                </select>\r\n            )\r\n            break;\r\n        default:\r\n            inputElement = <input\r\n                className={inputClasses}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />\r\n\r\n    }\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label} >{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Input;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport classes from './ContactData.module.css';\r\nimport axios from '../../../axios-orders';\r\nimport Input from '../../../components/UI/Input/Input';\r\n\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5,\r\n                    isNumeric: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your E-Mail'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'}\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                validation: {},\r\n                valid: true\r\n            }\r\n        },\r\n        formIsValid: false\r\n    }\r\n\r\n    orderHandler = ( event ) => {\r\n        event.preventDefault();\r\n        \r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price,\r\n            orderData: formData\r\n        }\r\n        this.props.onOrderBurger(order);\r\n       \r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n        \r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        };\r\n        const updatedFormElement = { \r\n            ...updatedOrderForm[inputIdentifier]\r\n        };\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        \r\n        let formIsValid = true;\r\n        for (let inputIdentifier in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\r\n    }\r\n\r\n    render () {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementsArray.map(formElement => (\r\n                    <Input \r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched={formElement.config.touched}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n                ))}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if ( this.props.loading ) {\r\n            form = <Spinner />;\r\n        }\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData) => dispatch(actions.purchaseBurger(orderData))\r\n    }   \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport ContactData from './ContactData/ContactData';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n\r\nclass Checkout extends Component{\r\n\r\n   \r\n      \r\n    checkoutCancelledHandler = () => {\r\n        //console.log(\"cancelled\");\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        //console.log(\"continued\")\r\n        this.props.history.replace(\"/checkout/contact-data\");\r\n    }\r\n    \r\n    render(){\r\n        //console.log(this.props)\r\n        let summary = <Redirect to=\"/\"  />\r\n\r\n        if (this.props.ings){\r\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\r\n            summary =  (\r\n                <div>\r\n                {purchasedRedirect}\r\n                <CheckoutSummary \r\n                    ingredients={this.props.ings}\r\n                    checkoutCancelled={this.checkoutCancelledHandler}\r\n                    checkoutContinued={this.checkoutContinuedHandler}/>\r\n                <Route \r\n                    path={this.props.match.path + '/contact-data'} \r\n                    component = {ContactData}\r\n                     />\r\n                </div>\r\n            );\r\n        }\r\n        return summary;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        purchased: state.order.purchased\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps) (Checkout);","import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nconst Order = (props) => {\r\n    const ingredients = [];\r\n\r\n    for (let ingredientsName in props.ingredients){\r\n        ingredients.push({\r\n            name: ingredientsName,\r\n            amount: props.ingredients[ingredientsName]\r\n        });\r\n    }\r\n\r\n    const ingredientsOutput = ingredients.map(ig => \r\n        {\r\n            return (<span\r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                padding: '5px',\r\n                border: '1px solid #ccc'\r\n\r\n        }} key={ig.name}>{ig.name} ({ig.amount})</span>)\r\n        })\r\n\r\n    return(\r\n        <div className={classes.Order}>\r\n        <p>Ingredients: {ingredientsOutput}</p>\r\n        <p>Price: <strong>USD {(props.price).toFixed(2)}</strong></p>\r\n    </div>\r\n    );\r\n   \r\n};\r\n\r\nexport default Order;","import React, { Component } from 'react';\r\n\r\nimport { connect }  from 'react-redux';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nimport * as  actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {\r\n       this.props.onFetchOrders();\r\n    }\r\n     \r\n    render() {\r\n        let orders  = <Spinner/>\r\n        if (!this.props.loading){\r\n            orders = this.props.orders.map(order => (\r\n                <Order\r\n                    key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    price={+order.price} />\r\n            ))\r\n        }\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: () => dispatch(actions.fetchOrders())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React, { Component } from 'react';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\n\r\nclass Auth extends Component {\r\n\r\n    state = {\r\n        controls: {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your Email'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n\r\n        const form = formElementsArray.map(formElement => (\r\n                <Input \r\n                    key={formElement.id}\r\n                    elementType={formElement.config.elementType}\r\n                    elementConfig={formElement.config.elementConfig}\r\n                    value={formElement.config.value}\r\n                    invalid={!formElement.config.valid}\r\n                    shouldValidate={formElement.config.validation}\r\n                    touched={formElement.config.touched}\r\n                    changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n            ));\r\n               \r\n\r\n        return (\r\n            <div>\r\n                <form>\r\n                    {form}\r\n                    <Button btnType = \"Success\">SUBMIT</Button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Auth; ","import React, { Component } from 'react';\r\nimport Layout from './hoc/Layout/Layout';\r\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\r\nimport Checkout from './containers/Checkout/Checkout';\r\nimport { Route, Switch  } from 'react-router-dom';\r\nimport Orders from './containers/Orders/Orders';\r\nimport Auth from './containers/Auth/Auth';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Layout>\r\n          <Switch>\r\n            <Route path=\"/checkout\" component={Checkout}/>\r\n            <Route path=\"/orders\" component={Orders}/>\r\n            <Route path=\"/auth\" component={Auth}/>\r\n            <Route path=\"/\" exact component={BurgerBuilder}/>\r\n          </Switch>        \r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n"," export const updateObject = (oldObject, updatedProperties) => {\r\n     return {\r\n         ...oldObject,\r\n         ...updatedProperties\r\n     }\r\n }"," import * as actionTypes from '../actions/actionTypes';\r\n import { updateObject } from '../utility';\r\n\r\n const initialState = {\r\n     ingredients: null, \r\n     totalPrice: 4,\r\n     error: false\r\n };\r\n\r\n const INGREDIENTS_PRICE = {\r\n    meat: 1.5,\r\n    bacon: 1,\r\n    salad: 0.5,\r\n    cheese: 0.5\r\n}\r\n\r\nconst addIngredient = (state, action) =>{\r\n    const updatedIngredient = {  [action.ingredientName]: state.ingredients[action.ingredientName] + 1}\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENTS_PRICE[action.ingredientName ] \r\n    }\r\n    return updateObject(state, updatedState );\r\n}\r\n\r\n\r\nconst removeIngredient = (state, action ) => {\r\n    const updatedIng = {  [action.ingredientName]: state.ingredients[action.ingredientName] - 1}\r\n    const updatedIngs = updateObject(state.ingredients, updatedIng);\r\n    const updatedSta = {\r\n        ingredients: updatedIngs,\r\n        totalPrice: state.totalPrice + INGREDIENTS_PRICE[action.ingredientName ] \r\n    }\r\n    return updateObject(state, updatedSta  );\r\n}\r\n\r\n\r\nconst setIngredients = (state, action ) => {\r\n    return updateObject(state, {\r\n        ingredients: {\r\n        salad: action.ingredients.salad,\r\n        bacon: action.ingredients.bacon,\r\n        cheese: action.ingredients.cheese,\r\n        meat: action.ingredients.meat\r\n    },\r\n    totalPrice: 4,\r\n    error: false                                \r\n    });\r\n}\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return updateObject (state, {error: true});\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\nswitch(action.type){\r\n    case actionTypes.ADD_INGREDIENT: return addIngredient(state, action);           \r\n\r\n    case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);    \r\n\r\n    case actionTypes.SET_INGREDIENTS: return setIngredients(state, action);   \r\n    \r\n    case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\r\n        \r\n    default: return state;\r\n}\r\n};\r\n\r\nexport default reducer; ","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n}\r\n\r\nconst purchaseInit = (state, action) => {\r\n    return updateObject(state, { purchased: false });\r\n}\r\n\r\nconst purchaseBurgerStart = (state, action) => {\r\n    return updateObject(state, { loading: true })\r\n}\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n    const newOrder = updateObject(action.orderData, { id: action.orderId });\r\n    return updateObject(state, {\r\n        loading: false,\r\n        purchased: true,\r\n        orders: state.orders.concat(newOrder)\r\n    })\r\n}\r\n\r\nconst purchaseBurgerFail = (state, action) => {\r\n    return updateObject(state, { loading: false })\r\n}\r\nconst fetchOrdersStart = (state, action) => {\r\n    return updateObject(state, { loading: true })\r\n}\r\n\r\nconst fetchOrdersSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        orders: action.orders,\r\n        loading: false\r\n    })\r\n}\r\n\r\nconst fetchOrdersFail = (state, action) => {\r\n    return updateObject(state, { loading: false })\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case actionTypes.PURCHASE_INIT: return purchaseInit(state, action);\r\n\r\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart(state, action);\r\n\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess(state, action);\r\n\r\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail(state, action);\r\n\r\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart(state, action);\r\n\r\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess(state, action);\r\n\r\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail(state, action);\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer; ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\r\nimport orderReducer from './store/reducers/order'; \r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n    burgerBuilder: burgerBuilderReducer,\r\n    order: orderReducer\r\n})\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(\r\n    applyMiddleware(thunk)\r\n));\r\n\r\n\r\nconst app = (\r\n    <Provider store = {store}>\r\n        <BrowserRouter>\r\n            <App/>\r\n        </BrowserRouter>\r\n    </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}